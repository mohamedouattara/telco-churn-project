{% extends 'base.html.twig' %}

{% block title %}Hello GeneratorController!{% endblock %}

{% block body %}


<div class="example-wrapper">

    {{ form_start(form) }}
    {# render the task's only field: description #}

    <div class="white-block" style="padding: 23px;">

        <h3>Table Generator</h3>
        {{ form_row(form.libelle) }}
        <ul class="champs" data-prototype="{{ form_widget(form.champs.vars.prototype)|e('html_attr') }}">
            {# iterate over each existing tag and render its only field: name #}
            {% for champ in form.champs %}
                <li class="generator-sub-content">{{ form_row(champ) }}</li>
            {% endfor %}
        </ul>
    </div>

    <button class="btn-large" style="margin-left: 31px;background:#3498db;">Generate Table</button>
    {{ form_end(form) }}
</div>

    <script type="application/javascript">
        var $collectionHolder;

        // setup an "add a tag" link
        var $addTagButton = $('<br><button type="button" class="add_tag_link btn-large waves-effect waves-light" style="position: relative;background:#3498db;"><i style="font-weight: bold;" class="material-icons">add</i></button>');
        var $newLinkLi = $('<li class="generator-sub-content"></li>').append($addTagButton);

        jQuery(document).ready(function() {

            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.champs');

            // add a delete link to all of the existing tag form li elements
            $collectionHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });



            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.champs');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addTagButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addTagForm($collectionHolder, $newLinkLi);
            });


            function addTagForm($collectionHolder, $newLinkLi) {
                // Get the data-prototype explained earlier
                var prototype = $collectionHolder.data('prototype');

                // get the new index
                var index = $collectionHolder.data('index');

                var newForm = prototype;
                // You need this only if you didn't set 'label' => false in your tags field in TaskType
                // Replace '__name__label__' in the prototype's HTML to
                // instead be a number based on how many items we have
                // newForm = newForm.replace(/__name__label__/g, index);

                // Replace '__name__' in the prototype's HTML to
                // instead be a number based on how many items we have
                newForm = newForm.replace(/__name__/g, index);

                // increase the index with one for the next item
                $collectionHolder.data('index', index + 1);

                // Display the form in the page in an li, before the "Add a tag" link li
                var $newFormLi = $('<li class="generator-sub-content"></li>').append(newForm);
                $newLinkLi.before($newFormLi);

                addTagFormDeleteLink($newFormLi);
            }

            function addTagFormDeleteLink($tagFormLi) {
                var $removeFormButton = $('<br><button type="button" class="btn red"><i class="material-icons">delete</i></button>');
                $tagFormLi.append($removeFormButton);

                $removeFormButton.on('click', function(e) {
                    // remove the li for the tag form
                    $tagFormLi.remove();
                });
            }

        });

    </script>

{% endblock %}
